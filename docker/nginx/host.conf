access_log  /var/log/nginx/access.log  main;

server {
    listen 80;

    charset UTF-8;
    set $root_path '/app/public';

    # block everything from being parsed
    location = /robots.txt {
       add_header Content-Type text/plain;
       return 200 "User-agent: *\nDisallow: /\n";
    }
    # static
    location ~* ^/static/(.+)$ {
        root '/usr/share/nginx/html';
        access_log        off;
        log_not_found     off;
        expires           30d;
    }

    location ~* ^/media/(.+)$ {
      root '/app';

      add_header 'Access-Control-Allow-Origin' "$http_origin" always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
    }

    # application
    location / {
        uwsgi_pass  web:8000;
        include     /etc/nginx/uwsgi_params;
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    }


   error_page  405     =200 $uri;


    access_log  /dev/stdout main;
    error_log   stderr error;

    ##
    # GZIP
    ##
    gzip               on;
    gzip_disable       msie6;
    gzip_vary          on;
    gzip_proxied       any;
    # gzip_http_version  1.0;  # uncomment this to allow gzipping responses on http/1.0. proxy_pass uses http/1.0
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;


}
